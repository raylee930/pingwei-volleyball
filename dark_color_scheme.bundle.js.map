{"version":3,"file":"dark_color_scheme.bundle.js","mappings":"mIAwDA,SAASA,EAAiBC,GACxBC,SAASC,gBAAgBC,QAAQH,YAAcA,EAC/C,MAAMI,EAAwBH,SAASI,cACrC,4BAE4B,OAA1BD,GAGFA,EAAsBE,aACpB,UACgB,SAAhBN,EA/DmB,UADC,UAmE1B,EA3DA,WACE,MAAMO,EAAkCC,MAAMC,KAC5CR,SAASS,uBAAuB,+BAE5BV,EAAc,QAAwB,eAC5C,GAAoB,SAAhBA,GAA0C,UAAhBA,EAC5BO,EAAgCI,SAASC,IAEvCA,EAAKC,QAA0B,SAAhBb,CAAsB,IAEvCD,EAAiBC,OACZ,CACL,MAAMc,EAA4BC,OAAOC,WACvC,gCACAC,QAKFlB,EAAiBe,EAA4B,OAAS,SACtDP,EAAgCI,SAASC,IAEvCA,EAAKC,QAAUC,CAAyB,GAE5C,CACAP,EAAgCI,SAASC,IACvCA,EAAKM,iBAAiB,UAAU,KAE9B,MAAMlB,EAAcY,EAAKC,QAAU,OAAS,QAC5Cd,EAAiBC,GACjB,QAAwB,cAAeA,GAEvCO,EAAgCI,SAASQ,IACnCA,IAAYP,IAEdO,EAAQN,QAAUD,EAAKC,QACzB,GACA,GACF,GAEN,CA7CAO,E,iCCLO,MAAMC,EAAsB,CAMjCC,IAAMC,IACJ,IAAIC,EAAQ,KACZ,IACEA,EAAQC,aAAaC,QAAQH,EAG/B,CAFE,MAAOI,GACPC,QAAQC,MAAMF,EAChB,CACA,OAAOH,CAAK,EAQdM,IAAK,CAACP,EAAKC,KACT,IACEC,aAAaM,QAAQR,EAAKC,EAG5B,CAFE,MAAOG,GACPC,QAAQC,MAAMF,EAChB,G","sources":["webpack://pikachu-volleyball/./src/resources/js/utils/dark_color_scheme.js","webpack://pikachu-volleyball/./src/resources/js/utils/local_storage_wrapper.js"],"sourcesContent":["'use strict';\nimport { localStorageWrapper } from './local_storage_wrapper';\nconst THEME_COLOR_LIGHT = '#FFFFFF';\nconst THEME_COLOR_DARK = '#202124';\n\nsetUpDarkColorSchemeCheckbox();\n\n/**\n * Set up dark color scheme checkbox\n */\nfunction setUpDarkColorSchemeCheckbox() {\n  const darkColorSchemeCheckboxElements = Array.from(\n    document.getElementsByClassName('dark-color-scheme-checkbox')\n  );\n  const colorScheme = localStorageWrapper.get('colorScheme');\n  if (colorScheme === 'dark' || colorScheme === 'light') {\n    darkColorSchemeCheckboxElements.forEach((elem) => {\n      // @ts-ignore\n      elem.checked = colorScheme === 'dark';\n    });\n    applyColorScheme(colorScheme);\n  } else {\n    const doesPreferDarkColorScheme = window.matchMedia(\n      '(prefers-color-scheme: dark)'\n    ).matches;\n    // The following line is not for \"document.documentElement.dataset.colorScheme = colorScheme;\".\n    // document.documentElement.dataset.colorScheme is not needed to be set for displaying dark color scheme,\n    // since style.css has media query \"@media (prefers-color-scheme: dark)\" which deals with it without JavaScript.\n    // The following line is for setting theme color and etc...\n    applyColorScheme(doesPreferDarkColorScheme ? 'dark' : 'light');\n    darkColorSchemeCheckboxElements.forEach((elem) => {\n      // @ts-ignore\n      elem.checked = doesPreferDarkColorScheme;\n    });\n  }\n  darkColorSchemeCheckboxElements.forEach((elem) => {\n    elem.addEventListener('change', () => {\n      // @ts-ignore\n      const colorScheme = elem.checked ? 'dark' : 'light';\n      applyColorScheme(colorScheme);\n      localStorageWrapper.set('colorScheme', colorScheme);\n      // For syncing states of other checkbox elements\n      darkColorSchemeCheckboxElements.forEach((element) => {\n        if (element !== elem) {\n          // @ts-ignore\n          element.checked = elem.checked;\n        }\n      });\n    });\n  });\n}\n\n/**\n * Apply color scheme. (Display color scheme to the screen.)\n * @param {string} colorScheme 'dark' or 'light'\n */\nfunction applyColorScheme(colorScheme) {\n  document.documentElement.dataset.colorScheme = colorScheme;\n  const themeColorMetaElement = document.querySelector(\n    'meta[name=\"theme-color\"]'\n  );\n  if (themeColorMetaElement !== null) {\n    // The line below is for the status bar color, which is set by theme-color\n    // meta tag content, of PWA in Apple devices.\n    themeColorMetaElement.setAttribute(\n      'content',\n      colorScheme === 'dark' ? THEME_COLOR_DARK : THEME_COLOR_LIGHT\n    );\n  }\n}\n","export const localStorageWrapper = {\n  /**\n   * Get value corresponding to the key from localStorage\n   * @param {string} key\n   * @returns {string|null}\n   */\n  get: (key) => {\n    let value = null;\n    try {\n      value = localStorage.getItem(key);\n    } catch (err) {\n      console.error(err);\n    }\n    return value;\n  },\n\n  /*\n   * Set key-value pair to the localStorage\n   * @param {string} key\n   * @param {string} value\n   */\n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, value);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n};\n"],"names":["applyColorScheme","colorScheme","document","documentElement","dataset","themeColorMetaElement","querySelector","setAttribute","darkColorSchemeCheckboxElements","Array","from","getElementsByClassName","forEach","elem","checked","doesPreferDarkColorScheme","window","matchMedia","matches","addEventListener","element","setUpDarkColorSchemeCheckbox","localStorageWrapper","get","key","value","localStorage","getItem","err","console","error","set","setItem"],"sourceRoot":""}